<?xml version="1.0" encoding="UTF-8"?><rdf:RDF
	xmlns="http://purl.org/rss/1.0/"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:admin="http://webns.net/mvcb/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	>
<channel rdf:about="http://localhost/wp">
	<title>ARJF Container</title>
	<link>http://localhost/wp</link>
	<description>Just another WordPress site</description>
	<dc:date>2018-09-02T09:19:01Z</dc:date>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<sy:updateBase>2000-01-01T12:00+00:00</sy:updateBase>
	<admin:generatorAgent rdf:resource="https://wordpress.org/?v=5.0.2" />
	<items>
		<rdf:Seq>
					<rdf:li rdf:resource="http://localhost/wp/accessing-private-members-without-using-reflection/"/>
					<rdf:li rdf:resource="http://localhost/wp/becoming-a-tdd-evangelist/"/>
					<rdf:li rdf:resource="http://localhost/wp/bash-history-tip/"/>
					<rdf:li rdf:resource="http://localhost/wp/life-of-a-full-stack-dev/"/>
					<rdf:li rdf:resource="http://localhost/wp/diving-into-docker/"/>
					<rdf:li rdf:resource="http://localhost/wp/a-step-into-the-unknown/"/>
					<rdf:li rdf:resource="http://localhost/wp/design-patterns/"/>
					<rdf:li rdf:resource="http://localhost/wp/giving-up-something-for-lent/"/>
					<rdf:li rdf:resource="http://localhost/wp/new-years-resolution/"/>
					<rdf:li rdf:resource="http://localhost/wp/festive-season-diet/"/>
				</rdf:Seq>
	</items>
</channel>
<item rdf:about="http://localhost/wp/accessing-private-members-without-using-reflection/">
	<title>Accessing private members without using reflection</title>
	<link>http://localhost/wp/accessing-private-members-without-using-reflection/</link>
	<dc:date>2018-03-07T10:01:28Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[Really handy trick (especially whilst writing unit tests) to access private instance members: https://ocramius.github.io/blog/accessing-private-php-class-members-without-reflection/]]></description>
	<content:encoded><![CDATA[<p>Really handy trick (especially whilst writing unit tests) to access private instance members:</p>
<p><a href="https://ocramius.github.io/blog/accessing-private-php-class-members-without-reflection/">https://ocramius.github.io/blog/accessing-private-php-class-members-without-reflection/</a></p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/becoming-a-tdd-evangelist/">
	<title>Becoming a TDD evangelist</title>
	<link>http://localhost/wp/becoming-a-tdd-evangelist/</link>
	<dc:date>2017-07-01T20:38:09Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[Of late, I feel really uncomfortable not writing tests before I code. Previously, I have written tests after I have coded in the form of a specification and/or functional tests but very rarely I have written tests before I code. As many of my previous roles, projects often came with hard deadlines which the stakeholders [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>Of late, I feel really uncomfortable not writing tests before I code. Previously, I have written tests after I have coded in the form of a specification and/or functional tests but very rarely I have written tests before I code. As many of my previous roles, projects often came with hard deadlines which the stakeholders never appreciated the real benefit of writing your tests before you code. Since I have started contracting, I feel obliged to fulfill my professional responsibilities my employment status entails. We pay insurances etc to protect ourselves against perceived potential bad workmanship but we can go one better and create contracts in the form of a fully comprehensive test suites where applicable.</p>
<p>I add the caveat applicable, as not all code can be easily unit tested. Take Drupal 7 for instance, you have to bootstrap the framework for writing functional/acceptance tests or you have to do a lot of work to be able to mock dependencies that your tests become bloated. On the other hand, of late I&#8217;ve had the pleasure of working with Symfony 2/3 and ES6 that allow me to practice test driven development. The defacto unit testing framework in the PHP world is PHPUnit and in the javascript world there are several (though I have only used qUnit). I generally find, if the framework/library you are using promotes dependency injection, then TDD is definitely do-able.</p>
<p>The other common excuse is the fore-mentioned length of time it takes. I recently attended PHP UK 17 in London and witnessed a talk where the speaker made the quote &#8220;testing is pre-emptive debugging&#8221;. I can not agree anymore. I have written some code with virtually no tests and then become embroiled in a dev-QA cycle that has taken many iterations before the code was released. This is a very expensive process which unit tests can help prevent. Furthermore the by-product of creating tests is that you fundamentally create documentation that other developers can go to rather than &#8220;asking around&#8221;. Not to mention it&#8217;s fun and very rewarding as you start challenging yourself (and even the requirements most of the time).</p>
<p>Anyway enough about the benefits for now, let me describe how I&#8217;ve become a fan. In my first contracting role, the test pack that I found was mainly functional. There were fixtures that helped mocked data but all in all too many dependencies were not being mocked and it took far too long to run the test pack on both dev/build environments that were built via CI. I instantly identified that this had to be improved. I am also a fan of layered architecture and hexagonal architecture as one of it&#8217;s benefits is it promotes testable code. I started creating the infrastructure services that was responsible for data lookups, API calls, logging, caching etc, then came the domain services that is responsible to applying business logic to arbitrary data and finally (if needed) the application services which act as a broker between the domain and infrastructure. This architecture enabled me to use dependency injection, mock dependencies and managed to create tests that tested code line by line at ease. Eventually I was able to reduce the <a href="http://opnsrce.github.io/how-to-read-and-improve-the-c-r-a-p-index-of-your-code" target="_blank" rel="noopener noreferrer">CRAP</a> index to under 10 per class and boast 100% code coverage.</p>
<p>The role after next, TDD was preached but not practiced. The client was eager, but again even though they practiced AGILE software development, hard deadlines were all too common on many projects. However, every week Uncle Bob clean code was shown to us in form of a workshop. In a chapter, TDD was the topic and he described a bowling game task where he demonstrated TDD. He began simple, following TDD red/green discipline until he produced code that satisfied the requirements and in doing so, gained significant code coverage. By doing this, he could refactor by creating something more elaborate knowing it was safe to as his test pack was his insurance. This literally blew my mind. After completing the set of videos, another TDD workshop was staged where the developers had to practice that was preached in a collaborative manner by pair programming with another developer. The task was to render numbers 1 to 100. Numbers that were:</p>
<ul>
<li>Divisible by 3 and 5, that number had to be substituted by &#8220;FizzBuzz&#8221;</li>
<li>Number that you could divide by 3 = Fizz</li>
<li>5 = Buzz</li>
</ul>
<p>We created a series of tests 1st that failed at first, then started writing production code using the red/green technique until all of our tests passed. The code was not great but it gave us a platform to start refactoring. We decided to implement the chain of responsibility design pattern as we wanted to adopt a OOA solution as opposed to lots of IF statements. You could have used a factory but we wanted an integer not an object at the time.</p>
<p>Since this, I was given a low priority project which was free of the more-mentioned time constraints which allowed me to create code that has 100% code coverage. The CRAP index is rather low as well which is a plus however we serious lack any functional/acceptance tests. When you are dealing with graphical web interfaces acceptance tests are vital as they are visible and these are what you deliver to the end client. There are several devices/browsers that you have to test against which require you to write end user tests if you want to integrate continuous integration/deployment into your workflow. Otherwise you are at the whims of the testers when you can easily (with invested time) allow the QA to write the acceptance criteria in the form of a domain specific language such as Gherkin, a developer can take the Gherkin and write acceptance tests and simultaneously practice TDD. Once the tests pass, you commit the code to your version control system and you can initiate regular builds and your testers revert from bug hunters to simply checkers and spend more time writing the test scripts. To be successful a team must implement all forms tests. In my opinion, unit tests are the foundations, acceptance tests are the roof and walls. Finally the functional tests are the windows and doors in a house.</p>
<p>Further reading:</p>
<ul>
<li><a href="http://www.getlaura.com/testing-unit-vs-integration-vs-regression-vs-acceptance/" target="_blank" rel="noopener noreferrer">Unit, Functional, Regression vs Acceptance Tests</a></li>
<li><a href="http://codeception.com/docs/01-Introduction" target="_blank" rel="noopener noreferrer">Codeception&#8217;s take</a></li>
<li><a href="http://docs.behat.org/en/v2.5/guides/1.gherkin.html" target="_blank" rel="noopener noreferrer">Behat and Gherkin</a></li>
<li><a href="http://blog.cleancoder.com/uncle-bob/2017/05/05/TestDefinitions.html" target="_blank" rel="noopener noreferrer">Uncle Bob&#8217;s introduction on tests</a></li>
<li><a href="http://blog.cleancoder.com/uncle-bob/2014/12/17/TheCyclesOfTDD.html" target="_blank" rel="noopener noreferrer">How to practice TDD</a></li>
<li><a href="http://blog.cleancoder.com/uncle-bob/2016/06/10/MutationTesting.html" target="_blank" rel="noopener noreferrer">Hambug testing</a></li>
<li><a href="http://butunclebob.com/ArticleS.UncleBob.TheBowlingGameKata" target="_blank" rel="noopener noreferrer">TDD Bowling game</a></li>
<li><a href="http://www.basistechnologies.com/continuous-integration-unit-testing-for-SAP" target="_blank" rel="noopener noreferrer">Unit tests and CI/CD </a></li>
<li><a href="http://opnsrce.github.io/how-to-read-and-improve-the-c-r-a-p-index-of-your-code" target="_blank" rel="noopener noreferrer">What is the C.R.A.P index</a></li>
<li><a href="https://github.com/adzfaulkner/tdd-foobar" target="_blank" rel="noopener noreferrer">TDD FooBar</a></li>
</ul>
<p>&nbsp;</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/bash-history-tip/">
	<title>Bash History Tip</title>
	<link>http://localhost/wp/bash-history-tip/</link>
	<dc:date>2017-06-05T17:00:30Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[In a Linux environment, copy and paste the following lines into your ~/.bash_rc or ~/.bash_profile using a text editor: if [[ -n "$BASH_VERSION" ]]; then bind '"\e[A"':history-search-backward bind '"\e[B"':history-search-forward fi Save then fire: source ~/.bash_rc # or source ~/.bash_profile And you will be able to auto complete commands by cycling up/down keys commands that you [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>In a Linux environment, copy and paste the following lines into your ~/.bash_rc or ~/.bash_profile using a text editor:</p>
<pre>if [[ -n "$BASH_VERSION" ]]; then
bind '"\e[A"':history-search-backward
bind '"\e[B"':history-search-forward
fi
</pre>
<p>Save then fire:</p>
<pre>source ~/.bash_rc
# or source ~/.bash_profile
</pre>
<p>And you will be able to auto complete commands by cycling up/down keys commands that you have run in the past.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/life-of-a-full-stack-dev/">
	<title>Life of a full-stack dev</title>
	<link>http://localhost/wp/life-of-a-full-stack-dev/</link>
	<dc:date>2017-05-13T17:15:48Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[It&#8217;s been nearly a full year since I last posted. Apologies for this, I have found the added duties that goes with contracting time consuming to say the least. Anyway enough of the excuses on to this post&#8217;s subject: the life of a full stack dev. When I first started out in the web, every [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>It&#8217;s been nearly a full year since I last posted. Apologies for this, I have found the added duties that goes with contracting time consuming to say the least. Anyway enough of the excuses on to this post&#8217;s subject: the life of a full stack dev.</p>
<p>When I first started out in the web, every /L(A|E){1)MP/i stack developer was fundamentally a full-stack developer. I didn&#8217;t have a framework as such to use to develop application(s) (other than procedural functions that were 10 lines+ long), the server side code was lumbered in with the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a> markup (known now as a big ball of mud) and deployment was made merely by transferring files over <a href="https://en.wikipedia.org/wiki/File_Transfer_Protocol" target="_blank" rel="noopener noreferrer">FTP</a> to several servers that were perhaps, load balanced. In this day and age, we have deployment tools and frameworks galore that adopt popular architectural patterns such as <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller" target="_blank" rel="noopener noreferrer">MVC</a>, <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel" target="_blank" rel="noopener noreferrer">MVVM</a>, <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93presenter" target="_blank" rel="noopener noreferrer">MVP</a> etc which helps divide up application logic from presentation. The web development industry has come a long way. Along with this evolution, there are now 3 types of developer:</p>
<ul>
<li>Front-end</li>
<li>Back-end</li>
<li>Full-stack</li>
</ul>
<p>The distinctions between are front-end deals with the markup, <a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">css </a>and <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">javascript</a>. Back-end deals with databases, message/work queues, caches, server side script languages such as <a href="http://www.php.net" target="_blank" rel="noopener noreferrer">PHP</a>, <a href="https://www.ruby-lang.org/en/" target="_blank" rel="noopener noreferrer">Ruby</a>, <a href="https://www.python.org/" target="_blank" rel="noopener noreferrer">Python</a> etc. A full stack developer essentially is the &#8220;jack of all trades&#8221;. They have sufficient knowledge/skills in each area to support the other types of developer with their work. This is what I call myself. For skill-set percentage I would say I&#8217;m 75/25% backend/frontend. I find backend development more predictable than front-end which is fundamentally the reason for my preference. As front-end has to contend with browser compatibility issues, margins/padding, z-indexes, <a href="http://stackoverflow.com/questions/8848097/indexof-not-supported-in-ie8-browser" target="_blank" rel="noopener noreferrer">indexOf</a> which is very time consuming relatively speaking. Backend isn&#8217;t all roses neither, as you have environment discrepancies (depending on the infrastructure set-up) which at times can cause headaches but more often than not, it just works. Despite the negative aspects, I do enjoy a change in scenery as I thrive in learning as I like the challenges that front end development brings.</p>
<p>When I first out, there was only vanilla <a href="http://vanilla-js.com/" target="_blank" rel="noopener noreferrer">javascript</a>. <a href="https://jquery.com/" target="_blank" rel="noopener noreferrer">jQuery</a> came along that made AJAX &amp; browser compatibility a little less cumbersome but then <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">javascript</a> literally exploded. <a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">NodeJs</a> came along that it is a &#8220;full-stack&#8221; engine as you can write micro-services that run on the server (similar to that of slim/silex in the <a href="http://www.php.net" target="_blank" rel="noopener noreferrer">PHP</a> world), use it as a dependency manager and much more. With that you have <a href="https://angularjs.org/" target="_blank" rel="noopener noreferrer">AngularJS</a>/<a href="https://facebook.github.io/react/" target="_blank" rel="noopener noreferrer">ReactJS</a>/<a href="https://vuejs.org/" target="_blank" rel="noopener noreferrer">VueJS</a> which can be used with build web/mobile applications respectively. You can write these applications in <a href="https://github.com/lukehoban/es6features" target="_blank" rel="noopener noreferrer">ECMA 6</a>/<a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">Typescript</a>. Each of which you will need to trans-compile to <a href="http://speakingjs.com/es5/ch25.html" target="_blank" rel="noopener noreferrer">ECMA 5/vanilla</a> due to browser compatibility issues (if you are developing for web that is). J<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">avascript</a> has also become hot on testing. There are several frameworks you can use to accomplish unit/BDD type of testing such as <a href="https://qunitjs.com/" target="_blank" rel="noopener noreferrer">qUnit</a>, <a href="https://mochajs.org/" target="_blank" rel="noopener noreferrer">Mocha</a>, <a href="https://jasmine.github.io/" target="_blank" rel="noopener noreferrer">Jasmine</a> that come to mind. J<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">avascript</a> has come along way. No longer it is a language for which, has been topics for many developer jibes. It has become a serious language which will evolve with the <a href="http://searchsqlserver.techtarget.com/definition/ECMAScript" target="_blank" rel="noopener noreferrer">ECMA standards</a>. I look forward to using it more in the future and may even switch to it as it&#8217;s become a full-stack language of sorts.</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a> (my nemesis) has pretty much stayed the same. No massive overhaul, maybe new selectors and properties but it&#8217;s still a &#8216;static&#8217; language. <a href="http://lesscss.org/" target="_blank" rel="noopener noreferrer">LESS</a>/<a href="http://sass-lang.com/" target="_blank" rel="noopener noreferrer">SASS</a> has come along and helped the developer become less <a href="https://en.wikipedia.org/wiki/Don%27t_repeat_yourself" target="_blank" rel="noopener noreferrer">DRY</a> as they&#8217;ve introduced functions, namespaces, mixin&#8217;s, mathematical and variables which has definitely helped. I find <a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a> tedious and fiddly as with the boom of technologies front-end dev&#8217;s now have to make responsive layout&#8217;s. Instead of merely creating a mobile, tablet and desktop layouts, it has become common practice to make one layout for all breakpoints for maintainability etc. Media queries enable to manipulate <a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a> per breakpoint but until the introduction of twitter bootstrap, you would still have to build boilerplate styling each time. <a href="http://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap</a> introduced the grid system (and much more) which allowed developers to define layout&#8217;s per breakpoint and if you compile by importing <a href="http://getbootstrap.com/" target="_blank" rel="noopener noreferrer">bootstrap</a> you can use all of it&#8217;s variables which helps prevent <a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a> bloat. <a href="http://getbootstrap.com/" target="_blank" rel="noopener noreferrer">Bootstrap</a> has definitely been a savior in many of the projects I have worked on.</p>
<p><a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a> 5 came along which has allowed you to embed video/audio with out the need of plugins such as flash/shockwave etc. Sections enable you to divide your layout into modules, form validation, web workers and much more. Whether or not we decide to use these new features in the <a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a> world is down to minimum browser compatibility support (99.9% we define this according to IE) . Currently I am at a client that requires minimum of IE 9 which is a luxury. Recent as 3 years ago, I worked on a project that required IE 6 after initially assuming that IE 8 was the minimum requirement. Major refactoring was needed. Say no more.</p>
<p>Web technologies are forever evolving. I&#8217;ve described front-end technology is no longer just:</p>
<p>/<a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a>|J<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">avascript</a>(<a href="https://jquery.com/" target="_blank" rel="noopener noreferrer">jQuery</a>)|<a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a>/</p>
<p>More like:</p>
<p>/<a href="https://developer.mozilla.org/en-US/docs/Web/HTML" target="_blank" rel="noopener noreferrer">HTML</a>[5]|<br />
J<a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank" rel="noopener noreferrer">avascript</a>[<a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer">NodeJs</a>|<a href="https://bower.io/" target="_blank" rel="noopener noreferrer">Bower</a>|<a href="https://gruntjs.com/" target="_blank" rel="noopener noreferrer">Grunt</a>|<a href="http://gulpjs.com/" target="_blank" rel="noopener noreferrer">Gulp</a>|<a href="https://rollupjs.org/" target="_blank" rel="noopener noreferrer">Rollup</a>|<a href="https://angularjs.org/" target="_blank" rel="noopener noreferrer">AngularJS</a>|<a href="https://facebook.github.io/react/" target="_blank" rel="noopener noreferrer">ReactJS</a>|<a href="https://vuejs.org/" target="_blank" rel="noopener noreferrer">VueJS</a>|<a href="http://backbonejs.org/" target="_blank" rel="noopener noreferrer">Backbone</a>|<a href="http://es6-features.org" target="_blank" rel="noopener noreferrer">ES6</a>|<a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">Typescript</a>|<a href="https://babeljs.io/" target="_blank" rel="noopener noreferrer">Babel</a>|<a href="https://qunitjs.com/" target="_blank" rel="noopener noreferrer">qUnit</a>|<a href="https://mochajs.org/" target="_blank" rel="noopener noreferrer">Mocha</a>|<a href="https://jasmine.github.io/" target="_blank" rel="noopener noreferrer">Jasmine</a>|.*]+|<br />
<a href="https://developer.mozilla.org/en-US/docs/Web/CSS" target="_blank" rel="noopener noreferrer">CSS</a>(<a href="http://lesscss.org/" target="_blank" rel="noopener noreferrer">LESS</a>|<a href="http://sass-lang.com/" target="_blank" rel="noopener noreferrer">SASS</a>)/</p>
<p>And this is why web developers have now become specialised in either front/backend development. Coupled by the evolution of service orientated architecture, you now have backend systems supplying data to frontend via <a href="http://www.webopedia.com/TERM/H/HTTP.html" target="_blank" rel="noopener noreferrer">HTTP</a> which has promoted the separation further. I face a real battle to keep up with both sides hence I am constantly reading magazines, books, attending to conferences with the target of acquiring adequate knowledge to allow me to perform in my profession. I describe it as a battle, which at the same time I thoroughly enjoy. I love learning, trying to keep myself level headed (i.e. not developing an ego) and acknowledging that I have a long way to go in being the all encompassing developer. I would describe this quest using an analogy of running down an upwards escalator. The technology is the upwards escalator, ever moving against you, running faster than you are. I think you get the gist?</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/diving-into-docker/">
	<title>Diving into Docker</title>
	<link>http://localhost/wp/diving-into-docker/</link>
	<dc:date>2016-05-11T12:43:33Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[For some time I have been stuck in my ways in terms of managing my environments. I had been using the combination of Vagrant / Puphpet to manage my environments since 2013 when I was introduced to it during my time with a former employer. It did the job, if I wanted to create a [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>For some time I have been stuck in my ways in terms of managing my environments. I had been using the combination of Vagrant / Puphpet to manage my environments since 2013 when I was introduced to it during my time with a former employer. It did the job, if I wanted to create a new environment all I had to do is go to the <a href="https://puphpet.com/" target="_blank">Puphpet</a> website, create a manifest (using a very user friendly GUI I must add), download the zip, extract it and run `vagrant up` and hey presto a new environment has been created. In a nutshell, this process would create a new VM on my machine each time. I have been happy with this up to now, until I looked at the <a href="https://www.virtualbox.org/" target="_blank">VirtualBox</a> manager and saw how many machines has been created. If I were to bring each of these up, I am pretty sure my 2011 Macbook Pro would literally grind to a halt as I have upgraded the memory to the maximum limit of 8gb, each of my VM&#8217;s use around 512mb and not to mention all of the other processes that are running on my machine. Not very efficient therefore I need to start looking for a more an alternative.</p>
<p>For sometime it has been preached to me via PHP conferences, <a href="https://www.phparch.com/" target="_blank">PHP Architect</a> and work colleagues, to look into <a href="https://www.docker.com/" target="_blank">Docker</a> so given the situation I find myself in, this gives me the perfect opportunity. Docker is a open source, lightweight application that automates software deployment to software containers. In an Linux environment it uses features of the kernel to allow multiple independent containers to run in a single Linux instance. Another powerful feature is it&#8217;s kind of source control for infrastructure. There are many images created which you can pull/push from and to the docker repository called <a href="https://hub.docker.com/" target="_blank">DockerHub</a>. Whether you want to use the base <a href="https://www.nginx.com/" target="_blank">Nginx</a> image or an extended version that is your call, whatever suits your requirements. In my previous sentence I have also hinted of another feature, extend-ability which allows you to customize and create your very own image and push it to the repository.</p>
<p>This sounds ideal in the <a href="https://en.wikipedia.org/wiki/LAMP_%28software_bundle%29" target="_blank">LAMP</a>/<a href="https://lemp.io/" target="_blank">LEMP</a> stack, for example you can create a containers for web servers (<a href="http://www.apache.org/" target="_blank">Apache</a>/Nginx), the different versions of <a href="http://php.net/" target="_blank">PHP</a> (7, 5.6.x, 5.5.x etc) and so on without the overhead of multiple VM&#8217;s. After doing some initial reading I thought I would start experimenting and immediately had to over come some hurdles which was related to my hardware. Docker does not natively run on OSX, instead you have to download <a href="http://boot2docker.io/" target="_blank">Boot2Docker</a> or <a href="https://www.docker.com/products/docker-toolbox" target="_blank">Docker Toolbox</a>. I opted for the latter as it is bundle which includes the former plus:</p>
<ul>
<li>Docker Quickstart Terminal &#8211; Simplifies booting up up the tools</li>
<li><a href="https://docs.docker.com/machine/" target="_blank">Docker Machine</a> &#8211; Installs the docker engine on VM(s) and provides an interface to manage the VM</li>
<li><a href="https://docs.docker.com/compose/overview/" target="_blank">Docker Compose</a> &#8211; Intended for testing environments, which allows you to define and running multiple containers in sync.</li>
<li><a href="https://docs.docker.com/kitematic/userguide/" target="_blank">Kitematic</a> &#8211; Allows you to manage containers via a graphical interface</li>
</ul>
<p>Will not talk about Kitematic much in this post, it looks neat but I want to enhance my DevOps knowledge and skills so would rather stick to the a combination of Docker Machine and Docker Compose.</p>
<p>I followed this <a href="http://blog.osteel.me/posts/2015/12/18/from-vagrant-to-docker-how-to-use-docker-for-local-web-development.html">tutorial</a> which discussed how to get up and running specifically on OSX. I did follow other tutorial&#8217;s which assumed that I was working in a pure Linux environment but found issues relating to port mapping and volume mounting. What you have to bear in mind is that boot2docker is a VM, so you have to map the container port to the VM&#8217;s so that it&#8217;s accessible via HTTP in your host&#8217;s web browser. The biggest headache was the volume mounting. By default, docker-machine creates a VM shared volume by mounting the /Users directory. This did not suit me as I only wanted to share my www files and there are <a href="https://github.com/boot2docker/boot2docker/issues/581" target="_blank">reported issues concerning the permissions that containers are unable to write to disk</a>. I got around this by installing the <a href="https://github.com/adlogix/docker-machine-nfs">docker-machine-nfs tool </a>via homebrew and now everything works as expected. Otherwise, everything was pretty fluent and seems so much more efficient than using Puphpet. I did face a minor challenge, which was to connect <a href="http://www.sequelpro.com/" target="_blank">SequelPro</a> to the <a href="https://www.mysql.com/" target="_blank">MySQL</a> container. I had to modify the docker-compose.yml file to explicitly map to port 3306 and by executing the following bash script <a href="https://gist.github.com/helderco/e9d8d072a362ad818f6a">db-open</a> which polls docker for the db creds, host IP and automatically opened the db client connecting to the container at the same time.</p>
<p>My future plans for docker is create a directory per project. Each will typically contain a directory per infrastructure detail (nginx, mysql, php etc) and a docker-compose file which will configure the project&#8217;s environment. Each docker-compose.yml file will mount code from another directory which I will keep in it&#8217;s original location for the time being. I think this makes sense which avoids coupling infrastructure details with the actual application. This is how I configured Puphpet and it makes sense to keep this strategy as it did not cause any issues. Perhaps 1 day, I will use it to manage my live servers but this seems quite ambitious so for the time being I will use this primarily just to manage my dev environments.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/a-step-into-the-unknown/">
	<title>A step into the unknown</title>
	<link>http://localhost/wp/a-step-into-the-unknown/</link>
	<dc:date>2016-04-24T17:27:00Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[Sometime ago I decided that contracting is something that I wanted to try in the relative near future. I wanted to be my own boss, take time out when I want and have more control over my day to day business. I must admit, I had been influenced by contractors that I have built both [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>Sometime ago I decided that contracting is something that I wanted to try in the relative near future. I wanted to be my own boss, take time out when I want and have more control over my day to day business. I must admit, I had been influenced by contractors that I have built both personal and professional relationships with as they promoted all the fore-mentioned benefits plus also how lucrative it can be. For me though, the biggest benefit is being able to sample businesses environment&#8217;s  etc in hope that I&#8217;d find somewhere that I really liked. I found as a perm employee, I had to more or less take the first role that was offered to me as attending interviews took considerable time that I had little of.</p>
<p>So 2 months ago I decided to hand in my notice. I had a couple of perm offers within a week but I felt it was just too easy. Years prior I would have snapped them up (probably would have taken the first one that came my way) but not on this occasion I was determined to try something new and in doing so, I was jumping in at the deep end, which was kind of exciting. After finishing my last perm role, within days I was in interviews. I had it in my mind that I was going to take a break and there I was, potentially starting my first contract. As a contractor, you have to be prepared for this however on this occasion I had not setup my limited company, no business bank account and not even contacted an accountant. Within days I had this all setup but was in vein as I did not win the contract on this occasion which was a disappointment at the time but in hindsight meant that I could learn things that I did not have the time for whilst I was working 40 hour weeks.</p>
<p>My first point of call was fixing my iOS application portfolio. A lot of the views did not look good, the loading modal took ages to disappear and the email form feature did not work. It took me considerable amount of time as I had to convert my Xcode project to Swift 2 and therefore learn it at the same time. This task could have taken me a week whilst I was full time employed and instead I was able to submit it to the app store within a day. Another technology that was on my strike list was <a href="https://www.typescriptlang.org/" target="_blank">Typescript</a>. It is a subset language of javascript which is maintained by microsoft and requires a transpiler to compile. I was really impressed with the language, it brings a Java style OOP, strong typed syntax, enums, generators, namespaces and much more. I have come across a similar concept before which was Coffee script but <a href="https://www.typescriptlang.org/" target="_blank">Typescript</a> has a distinct advantage which is it&#8217;s promoted in the very popular javascript framework Angular 2 which is a skill set featured in much of the front end vacancies that my email inbox has been literally flooded with. As I am a full stack developer, I felt compelled to see what all the fuss was about. I am quite impressed with Angular 2. It allows you to segregate HTML functionality into components which in turn contains a template, bind HTML element data to component properties, import other components via directives and much more. At this point I can not really say much more as I have not really used it other than participating in the official site tutorials. I have been reading <a href="https://www.phparch.com/" target="_blank">PHP Architect</a> for the past 6 months, and the most recent issue features an article about learning a new framework. It recommends finding a use case to actually use a framework to learn it. I can&#8217;t agree more with this statement, so I will stop there for the time being promoting a framework that I have not used, it looks neat though.</p>
<p>Otherwise, I have been reading up on features of PHP that I have not used to date, plenty interview preparation and a certain <a href="https://github.com/adzfaulkner/sainsburys" target="_blank">job application task</a> that involved scraping a web page and rendering the data in JSON form. I am more than happy to participate in these kind of tasks as it gives me a chance to use frameworks/libraries that I have read about. I used libraries such as <a href="http://symfony.com/doc/current/components/console/introduction.html" target="_blank">Symfony Console</a>, <a href="http://phake.readthedocs.org/" target="_blank">Phake</a> and <a href="https://github.com/FriendsOfPHP/Goutte" target="_blank">Goutte Scraper</a> to complete the task and learned a little about them as well. I am having fun!</p>
<p>The fun will run out though eventually as money will ultimately run out. I decided that I wanted to go contracting months ago and was advised to save up that safety net which I did. I estimate I have around 3 months wages worth saved. Fortunately, I have touched that pot just yet and do not plan to. Though deep down I do not want to go back to work really. I enjoy doing what I&#8217;m doing now, however I know that this time will come around again as contractors generally take time out between roles to learn.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/design-patterns/">
	<title>Design Patterns</title>
	<link>http://localhost/wp/design-patterns/</link>
	<dc:date>2016-03-22T19:47:54Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[Sometime last year, I was challenged in my work appraisal to improve my object orientated architecture. Straight away, if I&#8217;m criticised I automatically start self analysing and I do ask myself, is there room for improvement? Short answer is definitely yes. I would not be in a profession that I was super good at, this [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>Sometime last year, I was challenged in my work appraisal to improve my object orientated architecture. Straight away, if I&#8217;m criticised I automatically start self analysing and I do ask myself, is there room for improvement? Short answer is definitely yes. I would not be in a profession that I was super good at, this would bore me as I thrive on challenges. Anyway, days later I find myself looking for a kindle book on design patterns and found a couple that used PHP code snippets. I found several but chose <a href="http://www.amazon.co.uk/Design-Pattern-Essentials-Tony-Bevis/dp/0956575889/ref=sr_1_3?s=books&amp;ie=UTF8&amp;qid=1457381965&amp;sr=1-3&amp;keywords=php+design+patterns" target="_blank">PHP design patterns essentials by Tony Bevis</a> as the reviews were ok and cost effective. Despite obvious mistakes relating to the java syntax that was left after translating from the <a href="http://www.amazon.co.uk/Java-Design-Pattern-Essentials-Second/dp/0956575846/ref=asap_bc?ie=UTF8 target=">java version</a>. Another resource I came across is the <a href="http://designpatternsphp.readthedocs.org/en/latest/README.html" target="_blank">read the docs design patterns php</a> online resource which introduced other design patterns that the book did not. As the book was dedicated to the <a href="http://www.blackwasp.co.uk/gofpatterns.aspx" target="_blank">Gang of Four</a> and the website introduced others.</p>
<p>Both resources helped me start to think about how an individual coding problem can be solved using a relevant design pattern. They are not the silver bullet, more like a guide. This is an very important point.</p>
<p>Design patterns are structured into 3 categories:</p>
<ol>
<li>Creational</li>
<li>Structural</li>
<li>Behavioural</li>
</ol>
<p>Creational are a set of patterns that you follow to ensure that you instantiate a class in a particular fashion. Container of which are as follows:</p>
<ul>
<li>Abstract Factory &#8211; To create series of related or dependent objects without specifying their concrete classes.</li>
<li>Builder &#8211; Separate the construction of an object from its representation so that the same construction process can create different representations.</li>
<li>Factory Method &#8211; Define an interface for creating an object but the sub classes decides with class to create.</li>
<li>Prototype &#8211; Create a new object by simply cloning the prototype.</li>
<li>Singleton &#8211; Restrict the a class to be only instantiated once.</li>
</ul>
<p>Structural is how combine classes to create bigger structures. Container are:</p>
<ul>
<li>Adapter &#8211; To translate one interface for a class into a compatible interface.</li>
<li>Bridge &#8211; Decouple an abstraction from its implementation so that the two can vary independently.</li>
<li>Composite &#8211; To treat a group of objects the same way as a single instance of the object.</li>
<li>Decorator &#8211; To dynamically add new functionality to class instances.</li>
<li>Facade &#8211; Define an API to a set of sub-systems, avoiding coupling with the client.</li>
<li>Flyweight &#8211; Create a collection objects once using a defined criteria.</li>
<li>Proxy &#8211; To interface to anything that is expensive or impossible to duplicate.</li>
</ul>
<p>Finally Behavioural is how objects interact with each other. Container:</p>
<ul>
<li>Chain of Responsibility &#8211; To build a chain of objects to handle a call in sequential order. If one object cannot handle a call, it delegates the call to the next in the chain and so forth.</li>
<li>Command &#8211; Encapsulate a request as an object. Allowing you to parameterise clients with different requests.</li>
<li>Interpreter &#8211; Define the representation of a languages grammar.</li>
<li>Iterator &#8211; To make an object iterable and to make it appear like a collection of objects.</li>
<li>Mediator &#8211; Define how a set of objects interact.</li>
<li>Memento &#8211; Capture an objects state so that you restore at a later point.</li>
<li>Observer &#8211; aka PubSub, whenever the subject state is modified, the listeners are notified and act accordingly.</li>
<li>Strategy &#8211; Allow 1 algorithm to be swapped out for another.</li>
<li>State &#8211; Encapsulate varying behavior for the same routine based on an object’s state.</li>
<li>Template Method &#8211; Define a skeleton class, delegating key operations to sub classes.</li>
<li>Visitor &#8211; Add extra functionality to a class with out modifying changing the class.</li>
</ul>
<p>At first these were a lot to take in. I had come across factory, singleton, adapter, observer and strategy before but the others were alien to me at first. Anyway, after hours of revision during interview preparation and the commute to and from work it occurred to me that it&#8217;s not the technical aspects that took me a while to get my head around, more like the use cases and where to use them etc. I have unwittingly, in the past used a design pattern without even knowing it. Used a flyweight to cache db records using the id as the reference, cloned an object and resetting the properties thereby creating a prototype. I have produced some form of iterator, composite, decorator, template method etc. The real task should be able to see a programming problem and determine the solution using a design pattern.</p>
<p>Recently at work, we had a existing logging class which did not conform to the <a href="http://www.php-fig.org/psr/psr-3/" target="_blank">PSR-3</a> interface as it used a lot of class methods. I wanted to adapt this to use the <a href="http://www.php-fig.org/psr/psr-3/" target="_blank">PSR-3</a> interface but had to choose from a bridge or adapter. I answered the problem by describing the problem, as I used the word adapt. This was pretty straight forward as any changes to the logger would have caused regression. Bridges are useful when you know up front the problem and you prefer composition over inheritance which did not apply in this circumstance as described by the following <a href="http://stackoverflow.com/questions/1425171/difference-between-bridge-pattern-and-adapter-pattern" target="_blank">stack overflow thread</a>. Adapters are actually one of the most popular design patterns used. Popular libraries/frameworks such as <a href="http://framework.zend.com/" target="_blank">Zend Framework</a>, <a href="http://www.doctrine-project.org/" target="_blank">Doctrine</a>, <a href="https://github.com/Seldaek/monolog" target="_blank">Monolog</a> use them whether to write to various sources, connect to different database engines or to cache data using various libraries. Did not really come across bridge though until now. Both <a href="http://framework.zend.com/" target="_blank">Zend </a>/ <a href="https://symfony.com/" target="_blank">Symfony</a> frameworks use bridges for their request/response objects to conform to <a href="http://www.php-fig.org/psr/psr-7/" target="_blank">PSR-7</a> and I was only introduced to this during a talk in <a href="http://conference.phpnw.org.uk/phpnw15/" target="_blank">PHP North West 2015</a>.</p>
<p>Two other patterns that caught my eye was the mediator and observer. I am no stranger to the observer pattern though, as <a href="https://jquery.com/" target="_blank">jQuery</a> makes use of it and <a href="http://framework.zend.com/" target="_blank">Zend </a>/ <a href="https://symfony.com/" target="_blank">Symfony</a> frameworks event managers are based on them. Mediator is a interesting pattern, most examples I have read use car components as an example. A mediator class is created which registers all of the component objects such as Ignition, Gearbox, Brake, Accelerator and in turn of those registers the mediator object. So when a component changes it state the mediator is notified explicitly and notifies the listeners. However, the observer pattern pretty much solves this issue without the need to register a mediator to the interesting parties thereby making it more the decoupled solution. A mediator is more explicit in terms of the listeners you can trace through the code easier than observer but that&#8217;s about it.</p>
<p>Without rambling on much more, the last pattern I will talk about is the strategy pattern. Very recently I completed the task for a job that I was applying for. Without giving too much away, I had to demonstrate my knowledge of object orientated pattern and extend a class by overwriting the parent method and adding extra functionality. Straight away, I thought this problem could be solved more effectively using the strategy pattern as it allows you to swap out with algorithm out for another without creating many instances of that class. I recently came across <a href="http://guzzle3.readthedocs.org/plugins/cache-plugin.html">Guzzle&#8217;s ability to allow to swap out a strategy for another when you implement http caching</a>. Very simple, but yet very effective. The real power of them is when you want to future proof your code. For example, you foresee that in the very near future the CTO of your current company will migrate from <a href="http://framework.zend.com/manual/1.12/en/manual.html" target="_blank">Zend Framework 1</a> to <a href="http://symfony.com/download" target="_blank">Symfony 3</a>. Strategies allows you to swap out an implementation for another and in-fact generally composition over inheritance allows you to accomplish this. As long as they adhere to a binding contract (such as an interface and/or abstract class) it should make the migration a little less tedious. It&#8217;s all about the decisions you make.</p>
<p>I think this is a very good place to finish as I have only really touched the tip of the iceberg when it comes to design patterns. My intention was not to give you a tutorial, simply a summary of my understanding. I would really recommend reading up on them by simply searching for (you guessed it )&#8221;design patterns&#8221;. As there are a lot of material out there. I have listed a couple of sites that I would really recommend you on visiting which are as follows:</p>
<ul>
<li><a href="https://sourcemaking.com/design_patterns">https://sourcemaking.com/design_patterns</a></li>
<li><a href="http://designpatternsphp.readthedocs.org/en/latest/">http://designpatternsphp.readthedocs.org/en/latest/</a></li>
</ul>
<p>If you&#8217;re not in a PHP developer, then these patterns are translatable from language to language. I have implemented singleton (<a href="http://stackoverflow.com/questions/137975/what-is-so-bad-about-singletons" target="_blank">for my sins</a>) in both javascript and objective-c so find a language that you are familiar with and go from there.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/giving-up-something-for-lent/">
	<title>Giving up something for Lent</title>
	<link>http://localhost/wp/giving-up-something-for-lent/</link>
	<dc:date>2016-02-08T20:13:00Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Nutrition]]></dc:subject>
	<description><![CDATA[For the past 3 years, I have observed lent. Lent is a Christian religious activity where you choose to give up an activity and/or an item of food for 40 days and 40 nights. In certain domination&#8217;s of Christianity, Sunday is treated as a &#8216;cheat day&#8217; and in others it&#8217;s all out. I personally prefer [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>For the past 3 years, I have observed lent. Lent is a Christian religious activity where you choose to give up an activity and/or an item of food for 40 days and 40 nights. In certain domination&#8217;s of Christianity, Sunday is treated as a &#8216;cheat day&#8217; and in others it&#8217;s all out.</p>
<p>I personally prefer to observe Lent than a New Years Resolution in terms of nutrition. For me, a New Years Resolution is more about reflection, what can you do to improve one self as discussed in a <a href="/blog/2016/01/22/new-years-resolution/" target="_blank">previous article</a> whilst on the other hand, I treat Lent as an excuse to apply the bad nutrition handbrake. During the winter, I tend to loosen the &#8220;naughty food shackles&#8221; somewhat and indulge in whatever I want. I would describe it as a kind of 4/3 diet where I detox on veg, white meat/fish and the other half is all about doing what I want with no guilt. When the weather starts to warm up, I pretty much eat sensibly and have a cheat day or 2 as I find that my body does not need to consume as many calories as it is when it is cold. Lent is the signal that warmer times are ahead so lets start &#8220;getting down to business&#8221;.</p>
<p>In the past I chose to give up items such chocolate, all kind of sugar etc. This year has probably been my hardest in terms of decision as I have not really binged on anything in particular. It was easier in recent years as:</p>
<ul>
<li>2013: I had a thing for chocolate so gave that up</li>
<li>2014: Coincided with my post Cancun holiday strip down diet so pretty much everything was off the cards except for veg, chicken and certain <a href="http://www.the-gi-diet.org/lowgifoods/">low-gi carbs</a> before 4pm.</li>
<li>2015: I had only come back from New York and indulged in the local cuisine so opted to cut out all sugar (even cider)</li>
</ul>
<p>So this year, I want to pick something different this time round. The choices I have thought of are as follows:</p>
<ul>
<li>Cheese</li>
<li>Beef</li>
<li>Pork</li>
<li>White potato chips</li>
<li>Pastries</li>
</ul>
<p>I really enjoy eating dutch cheese (edam, gouda etc) on my cheat days but have never really binged on it. Plus it has calcium, protein, vitamin A and vitamin b12 so have decided to cross that 1 off the list. I don&#8217;t really crave or eat a lot of pork, so giving that up would not be much of a challenge. Sometimes simple carbs are necessary to boost the sugar levels and again I do not really crave chips so I can forget about that. Which leaves me with pastries and beef. Pastries have no real nutritional benefit, full of trans fats and are more-ish as I have been known to eat more than 1 so I think this can go on my list of foods to give up. The other, beef has plenty of nutrients such as iron, protein, potassium and vitamin B&#8217;s among others however as mentioned in my <a href="/blog/2016/01/22/new-years-resolution/" target="_blank">New Years Resolution blog post</a>, we are consuming too much of it. As reported by <a href="http://www.theguardian.com/environment/2014/jul/21/giving-up-beef-reduce-carbon-footprint-more-than-cars">the Guardian</a> reducing our intake of beef would significantly reduce humanity&#8217;s carbon footprint. I treat beef as a treat anyway, as I have it only once a week due to <a href="http://edition.cnn.com/2012/03/12/health/red-meat-shorten-lifespan/">health warnings on over consumption</a> but on moral grounds I have decided to give it up and therefore add it onto my food blacklist for the next 40 days. I can get the nutrients that beef offers from other foods anyway.</p>
<p>So far I have pastries and beef that I will be giving up temporarily and I feel compelled to add another. Some while back, I watched a <a href="http://www.bbc.co.uk/programmes/b03t8r4h" target="_blank">BBC program titled Fat versus Sugar</a> and it appealed to me. The main focus of the Horizon episode was an experiment on 2 twins which 1 would only eat consume carbohydrates and the other would eat only fatty foods. The results were surprising, both had lost weight and the fat consumer was borderline diabetic. The reason why, I will leave you to watch the episode but on a side note the diabetic diagnosis was completely astonishing. The episode then discussed the real cause of obesity and diabetes was due to foods that conatined both I have decided to give these up. Foods that feature sugar and saturated or trans fats are the one&#8217;s that I need to stay away from.</p>
<p>So foods such as:</p>
<ul>
<li>Chocolate</li>
<li>Donuts</li>
<li>Ice cream</li>
<li>Biscuits</li>
<li>Cakes</li>
</ul>
<p>Are definitely on my blacklist for the next 40 days. I will consume sweets in moderation, mostly as a treat but will keep my consumption generally to around 25g net a day. Foods that contain the good fats (monounsaturated and polyunsaturated) such as fish, nuts and avocado I will eat in moderation, like I generally do on a daily basis.</p>
<p>So that&#8217;s it, my 2016 foods that I will give up for lent is complete. In the time of writing, from Ash Wednesday which is in 2 days time, I will not consume beef, pastries and foods that contain both sugar and fat. It will be difficult 2 or 3 weeks in, but by the end I will feel a sense of accomplishment and will be ready to indulge in Easter activities. After that I will possibly continue it in some way or form.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/new-years-resolution/">
	<title>New Years Resolution</title>
	<link>http://localhost/wp/new-years-resolution/</link>
	<dc:date>2016-01-22T17:53:47Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Fitness]]></dc:subject>
		<dc:subject><![CDATA[Nutrition]]></dc:subject>
		<dc:subject><![CDATA[Software Development]]></dc:subject>
	<description><![CDATA[The dreaded first day back at work looms and with it my attention shifts to New Year resolutions. Focus generally is how I can improve myself? This year I am struggling to find one. My diet works for me and I am doing all the hours I can in the gym so what else can [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>The dreaded first day back at work looms and with it my attention shifts to New Year resolutions. Focus generally is how I can improve myself? This year I am struggling to find one. My diet works for me and I am doing all the hours I can in the gym so what else can I do? Last year I made a simple vow, which was to read more whilst commuting to and from work which I kept and still do to this day. On second thoughts, my diet works for me but I can tweak it slightly by being a little less religious perhaps? This question I am currently pondering but I could make another, perhaps learn another new programming language?</p>
<p>Last year I learnt <a href="https://developer.apple.com/swift/">Swift</a>, the programming language that Apple hopes that will replace Objective-C one day. I found it a really fascinating language, completely different to what I am used to and the way it handles null values was a real eye opener. You have to declare a variable as an optional which you have to unwrap to use the value. I recently was introduced to C# and I could see quite a few similarities. Perhaps I could learn Python, as I really like to way the language is structured/organized (i.e. the tabs) or Java as I want to one day develop an Android app. These are two distinct possibilities but why limit it to just one? Surely there are several ways that I can move forward in my life and improve? The answer will not come easy to me, it will probably dawn on me when performing self-analysis (which I do on a regular basis).</p>
<p>My profession is where most of my resolution&#8217;s were made last year. Every 6 months, we have appraisals which includes a list of improvements such as the fore-mentioned <a href="https://developer.apple.com/swift/">Swift programming language</a>, re-acquainting myself with iOs development and <a href="http://www.vim.org/">Vim editor</a>. The upcoming 1 will result in more targets which I can kind of declare as New Year Resolutions? I think they will quantify as sufficient promises and I will discover what other people think about areas where I can progress. Not just technical, but <a href="https://en.wikipedia.org/wiki/Soft_skills">soft skills</a> such as patience, being a team player and many more. They are basically there to improve how you conduct yourself in the work place.</p>
<p>Football used to be a massive passion for me. Throughout my childhood and early adult life I played every week on Saturday and/or Sunday but injuries and life in general got in the way I had to give it up. Recently I have found myself having a &#8220;kick about&#8221; with work colleagues which I have thoroughly enjoyed. Unfortunately they do not play often and I do not know of anyone looking for players but never fear, I can sign up as an individual on various sites such as <a href="http://www.gomammoth.co.uk" target="_blank">Go Mammoth</a> or <a href="https://www.gumtree.com/" target="_blank">Gumtree</a>. I will probably wait until spring comes along as I want to concentrate in the gym for the time being. Another fitness activity I participated in was Running. Last year I ran the <a href="http://www.greatrun.org/great-south-run" target="_blank">Great South Run</a> and thoroughly enjoyed it. Every Sunday for 4 weeks, I ran 10 miles and more and more I got obsessed by wanting to beat my time every run. From 1 hour 26, I managed to run 1 hour 21 before the big event where I ran it just less than 1 hour 25. I regressed! So this could well be something that I want to put right by running under 1 hour 20, this could well be my first resolution.</p>
<p>Anyway enough about me, as you can tell I have plenty to ponder on. This leads me to ask what about you the reader? Have I helped you to consider what you can do to improve 1 self? I will now list a questions that you should ask yourself:</p>
<ol>
<li>Do I eat too much meat? &#8211; I think people can generally start cutting back on the amount of meat us human beings consume. <a href="http://www.bbc.co.uk/newsbeat/article/35038053/arnold-schwarzenegger-stop-eating-meat-and-save-the-planet">BBC recently reported that Arnold Schwarzenegger recommended that we cut down on meat </a>which first I thought was hypocritical but made a lot of sense. We should instead treat red meat as a treat, consume more veg and if needed go for white meat or fish.</li>
<li>Coffee &#8211; Are you drinking too much? How about cutting down? There are many health benefits such as:
<ol>
<li>Improved sleep</li>
<li>Less mood swings</li>
<li><a href="http://tracidmitchell.com/fitness/say-bye-bye-belly-fat-by-making-this-change/">Even weight loss</a></li>
</ol>
<p>I managed to cut down from 3 cups to 2. Some days zilch. I drink it when I feel it is absolutely necessary.</li>
<li>Do at least <a href="http://www.bbc.co.uk/news/magazine-33154510">10,000 steps a day</a> as this can help your fitness and overall well being.</li>
<li>Analyse how you treat your loved ones. Is there something you can improve? You can extend that to your work colleagues as well. I do a lot of self analysis and have identified where I can improve.</li>
</ol>
<p>All of these are not that common but at the same time, I&#8217;ve eavesdropped these topics being discussed. The meat 1 is definitely worth a shout, not from just a personal perspective but for future generations. I believe each are sustainable as well as it&#8217;s simple as it&#8217;s just portion control, will power or accepting that we are all human and there is plenty of room for improvement.</p>
<p>I shall leave it here before I preach more than I already do. All I do is ask that you consider before you make the resolution is it sustainable? If not, you may want to consider something for lent, which I will talk about in a future post.</p>
]]></content:encoded>
	</item>
<item rdf:about="http://localhost/wp/festive-season-diet/">
	<title>Festive Season Diet</title>
	<link>http://localhost/wp/festive-season-diet/</link>
	<dc:date>2015-12-31T10:40:28Z</dc:date>
	<dc:creator><![CDATA[blogger]]></dc:creator>
			<dc:subject><![CDATA[Fitness]]></dc:subject>
		<dc:subject><![CDATA[Nutrition]]></dc:subject>
	<description><![CDATA[So I am an advocate of your body is a temple, you are who you eat etc and it is currently post Christmas day. You have been given endless amounts of chocolate (in the form of presents), you can&#8217;t be bothered to cook a nutritious meal and you are in constant battle with yourself. You [&#8230;]]]></description>
	<content:encoded><![CDATA[<p>So I am an advocate of your body is a temple, you are who you eat etc and it is currently post Christmas day. You have been given endless amounts of chocolate (in the form of presents), you can&#8217;t be bothered to cook a nutritious meal and you are in constant battle with yourself. You keep telling yourself, after the New Year you will be back on your normal diet of essentially portion control but it does not help you just want to eat rubbish and generally over indulge.</p>
<p>I suppose I can treat this as an experiment, as I have noticed behavioral changes. On my routine diet, I would describe myself as generally balanced but since Christmas, I have noticed I am:</p>
<ol>
<li>Less patient</li>
<li>Energy levels go from and to extremes (no balance)</li>
<li>Sleep more</li>
<li>Acne</li>
<li>Bloating</li>
<li>Muscles more pumped</li>
<li>More Impulsive</li>
</ol>
<p>Energy level fluctuations can be a positive, as when I&#8217;m energetic I perform to my best in the gym, I can multi-task, think of idea&#8217;s that I would not normally conjure up and many more. For the ego, enlarged muscles is great in the short term but this primarily caused by the high levels of glycogen which is not good in the long run. On the negative side, I prefer to sleep less (i.e. 7.5 hours a day), flat stomach, clear skin and patience is a virtue so overall I could not live like this on regular basis. I require balance sooner rather than later.</p>
<p>The biggest factor is water consumption. Generally I drink 4+ litres of good old fashioned h2o a day. Over the past week I am on around 2. For me, water is very important as it keeps me full up and of course your body demands it using the signals similar to hunger. So I can attribute my recent eating habits to the lack of water, instead of raiding the biscuit tin, I should instead think twice and drink a litre of water. You can almost make a decision chart based on my preceding sentences, or a programmatic if then statement in computer science context:</p>
<pre>if sensation.isHungry() then
    action.drinkWater()
    if sensation.isHungry() then
        action.eat()
    endif
endif</pre>
<p>Of course, eat() and drinkWater() methods could have multiple parameters such as what you eat which I will go into further in another post as I am in danger of digressing.</p>
<p>So how do I combat the internal struggle of the unhealthy vs healthy eating habit that I going through? Trick is, for every bad thing you eat, follow it up with something extremely healthy. The <a href="http://www.the-gi-diet.org/lowgifoods/">GI diet</a> provides the perfect guide. When you eat something full of sugar i.e. chocolate, consume a carrot and water. This takes away the craving for more I find (plus it will help with digestion). I will go into more on the subject of GI diet in a later post as I have plenty to say on the subject and other diets I have experimented with. If you can make it out for a run, gym or any form of exercise during the festive period, do it. Even if it is for half an hour, this will help.</p>
<p>In summary, enjoy the festive season indulgences however do not extend it past the the New Year. I will talk soon about the different diets and how you can experiment to find the 1 that suits you best.</p>
]]></content:encoded>
	</item>
</rdf:RDF>
